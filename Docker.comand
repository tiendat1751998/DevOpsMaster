docker container run --publish 80:80 nginx:latest

docker container ls
docker ps  (old way)

docker container run --publish 8080 -- detach --name jenkinstest jenkins:latest

docker container top jenkinstest
ps -edf | grep nginx

mức tiêu thụ tài nguyên container

docker stats jenkinstest

lấy thông tin docker

docker inspect jenkinstest

 vào trong container


 docker run -it jenkinstest /bin/bash


 docker exec -it jenkins test /bin/bash


 login to mysql by docker
 docker exec -it mysql-dk mysql -uroot -p


 docker run   -d -e  MARIADB_USER=admin -e MARIADB_PASSWORD=Adm1n123* -e MARIADB_DATABASE=workpress -e MARIADB_ROOT_PASSWORD=Adm1n123* -p 3306:3306 -v /docker/mariadb:/var/www/html --network mynetwork --name mariadb mariadb

   docker run -d -e WORDPRESS_DB_HOST=mariadb -e WORDPRESS_DB_NAME=workpress  -e WORDPRESS_DB_USER=admin -e WORDPRESS_DB_PASSWORD=Adm1n123* -p 8080:80 --network mynetwork -v /docker/wordpress:/var/www/html --name wordpress wordpress


docker tag dotiendat1751998/jenkins:latest dotiendat1751998/jenkins:1.0

-- management data

docker volume inspect


docker run   -d -e  MARIADB_USER=admin -e MARIADB_PASSWORD=Adm1n123* -e MARIADB_DATABASE=workpress -e MARIADB_ROOT_PASSWORD=Adm1n123* -p 3306:3306 --mount source=/docker/mysql,destination=var/lib/mysql --network mynetwork --name mariadb mariadb


docker container run -d --name nginxbind --mount type=bind,source=$(pwd),target=/app nginx


git clone https://github.com/anshulc55/Docker_for_DevOps.git

docker compose logs serivceName

docker logs -f  --tail=5 jenkins
docker composer exec servicenamae<sheel>


-- Create Docker Service
 docker service create --replicas 2 <image>



 update - scale up the services

docker service update <service_name> - -replicas <Number of Services>

create note docker swarm
➢ Get Token at runtime:
docker swarm join-token manager

➢ Switch Manager Node in Docker

docker node update - -role manager <node_name>

➢ Create Docker Service with Replicas

docker service create --replicas <Number of Replica> <Image> <Command>

Verify Which Node is running, which containers

docker service ps <service_name>

Docker Swarm visualizer

docker stack deploy -c docker-compose.yml visualizer

docker network create -d overlay myNetwork

docker service create --name postgress --network myNetwork -e POSTGRES_PASSWORD=myPass postgres


docker service create --name drupal --network  myNetwork -p 8080:80 drupal 


--volume
 docker container run --name mysqldb -e ""

 ---docker swarm

 docker node update --lable-add=region=east-1-d

docker service create --constraint=node.labels.region==east-1-d postgres
docker service update --constraint-rm=node.labels.region==east-1-d --constraint-add=node.labels.region==worker postgres


-- docker scale
 docker service scale pythonDevOps=2


 docker stack deploy -c dokcer.yml DevOpsMaster



